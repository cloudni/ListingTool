package com.lt.dao.mapper;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.lt.dao.model.AdChangeLog;
import com.lt.dao.po.AdChangeLogPO;
@Repository
public interface AdChangeLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_ad_change_log
     *
     * @mbggenerated Tue Apr 14 18:15:36 CST 2015
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_ad_change_log
     *
     * @mbggenerated Tue Apr 14 18:15:36 CST 2015
     */
    int insert(AdChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_ad_change_log
     *
     * @mbggenerated Tue Apr 14 18:15:36 CST 2015
     */
    int insertSelective(AdChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_ad_change_log
     *
     * @mbggenerated Tue Apr 14 18:15:36 CST 2015
     */
    AdChangeLog selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_ad_change_log
     *
     * @mbggenerated Tue Apr 14 18:15:36 CST 2015
     */
    int updateByPrimaryKeySelective(AdChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_ad_change_log
     *
     * @mbggenerated Tue Apr 14 18:15:36 CST 2015
     */
    int updateByPrimaryKeyWithBLOBs(AdChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_ad_change_log
     *
     * @mbggenerated Tue Apr 14 18:15:36 CST 2015
     */
    int updateByPrimaryKey(AdChangeLog record);
    
    /**
     * 批量插入
     * @param list
     */
    void batchInsertSelective(List<AdChangeLog> list);
    
    //自定义
    /**
     * 根据状态查询变更记录是否有未处理的
     * @param status
     */
    Integer countByStatus(Integer status);
    
    /**
     * 取得AD Change Log记录
     * @param map
     * @return
     */
    public List<AdChangeLogPO> getAdChangeLog(AdChangeLogPO po);
}