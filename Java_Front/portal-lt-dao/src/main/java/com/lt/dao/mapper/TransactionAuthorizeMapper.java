package com.lt.dao.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import com.lt.dao.model.TransactionAuthorize;
@Repository
public interface TransactionAuthorizeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_authorize
     *
     * @mbggenerated Tue Apr 14 10:02:33 CST 2015
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_authorize
     *
     * @mbggenerated Tue Apr 14 10:02:33 CST 2015
     */
    int insert(TransactionAuthorize record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_authorize
     *
     * @mbggenerated Tue Apr 14 10:02:33 CST 2015
     */
    int insertSelective(TransactionAuthorize record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_authorize
     *
     * @mbggenerated Tue Apr 14 10:02:33 CST 2015
     */
    TransactionAuthorize selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_authorize
     *
     * @mbggenerated Tue Apr 14 10:02:33 CST 2015
     */
    int updateByPrimaryKeySelective(TransactionAuthorize record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_authorize
     *
     * @mbggenerated Tue Apr 14 10:02:33 CST 2015
     */
    int updateByPrimaryKey(TransactionAuthorize record);
    
    //自定义
    void updateBatch(List<TransactionAuthorize> list);
    /**
     * 根据管理广告系列的对象和id，查询对应冻结款项
     * @param refId
     * @param refObject
     * @return
     */
    TransactionAuthorize selectByRefObject(@Param("refId")Integer refId, @Param("refObject")String refObject);
}