package com.lt.dao.mapper;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.lt.dao.model.TransactionChangeLog;
@Repository
public interface TransactionChangeLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_change_log
     *
     * @mbggenerated Tue Apr 21 20:17:11 CST 2015
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_change_log
     *
     * @mbggenerated Tue Apr 21 20:17:11 CST 2015
     */
    int insert(TransactionChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_change_log
     *
     * @mbggenerated Tue Apr 21 20:17:11 CST 2015
     */
    int insertSelective(TransactionChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_change_log
     *
     * @mbggenerated Tue Apr 21 20:17:11 CST 2015
     */
    TransactionChangeLog selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_change_log
     *
     * @mbggenerated Tue Apr 21 20:17:11 CST 2015
     */
    int updateByPrimaryKeySelective(TransactionChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_change_log
     *
     * @mbggenerated Tue Apr 21 20:17:11 CST 2015
     */
    int updateByPrimaryKeyWithBLOBs(TransactionChangeLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lt_transaction_change_log
     *
     * @mbggenerated Tue Apr 21 20:17:11 CST 2015
     */
    int updateByPrimaryKey(TransactionChangeLog record);
    
    //自定义
    void batchInsertSelective(List<TransactionChangeLog> list);
    
    /**
     * 根据状态查询交易变更记录是否有未处理的
     * @param status
     */
    Integer countByStatus(Integer status);
}