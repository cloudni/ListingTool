<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lt.dao.mapper.LTUserMapper">
  <resultMap id="BaseResultMap" type="com.lt.dao.model.LTUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="last_login_time_utc" jdbcType="INTEGER" property="lastLoginTimeUtc" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="create_time_utc" jdbcType="INTEGER" property="createTimeUtc" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_time_utc" jdbcType="INTEGER" property="updateTimeUtc" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, email, username, password, company_id, department_id, last_login_time_utc, last_login_ip, 
    create_time_utc, create_user_id, update_time_utc, update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lt_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lt_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lt.dao.model.LTUser">
    insert into lt_user (id, email, username, 
      password, company_id, department_id, 
      last_login_time_utc, last_login_ip, create_time_utc, 
      create_user_id, update_time_utc, update_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{lastLoginTimeUtc,jdbcType=INTEGER}, #{lastLoginIp,jdbcType=VARCHAR}, #{createTimeUtc,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=INTEGER}, #{updateTimeUtc,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lt.dao.model.LTUser">
    insert into lt_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="lastLoginTimeUtc != null">
        last_login_time_utc,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="createTimeUtc != null">
        create_time_utc,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTimeUtc != null">
        update_time_utc,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTimeUtc != null">
        #{lastLoginTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTimeUtc != null">
        #{createTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTimeUtc != null">
        #{updateTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lt.dao.model.LTUser">
    update lt_user
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTimeUtc != null">
        last_login_time_utc = #{lastLoginTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTimeUtc != null">
        create_time_utc = #{createTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTimeUtc != null">
        update_time_utc = #{updateTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lt.dao.model.LTUser">
    update lt_user
    set email = #{email,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      last_login_time_utc = #{lastLoginTimeUtc,jdbcType=INTEGER},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      create_time_utc = #{createTimeUtc,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_time_utc = #{updateTimeUtc,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>