<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lt.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lt.dao.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 17 14:35:43 GMT+08:00 2015.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="last_login_time_utc" property="lastLoginTimeUtc" jdbcType="INTEGER" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="create_time_utc" property="createTimeUtc" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_time_utc" property="updateTimeUtc" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 17 14:35:43 GMT+08:00 2015.
    -->
    id, email, username, password, company_id, department_id, last_login_time_utc, last_login_ip, 
    create_time_utc, create_user_id, update_time_utc, update_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.lt.dao.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 17 14:35:43 GMT+08:00 2015.
    -->
    select u.*,c.name as companyName,d.name as departmentName from lt_user u 
    left join lt_company c on u.company_id=c.id
    left join lt_department d on u.department_id=d.id
    where u.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lt.dao.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 17 14:35:43 GMT+08:00 2015.
    -->
    delete from lt_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lt.dao.model.User" >
    insert into lt_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="lastLoginTimeUtc != null" >
        last_login_time_utc,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="createTimeUtc != null" >
        create_time_utc,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTimeUtc != null" >
        update_time_utc,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTimeUtc != null" >
        #{lastLoginTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTimeUtc != null" >
        #{createTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTimeUtc != null" >
        #{updateTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.lt.dao.model.User" >
    update lt_user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTimeUtc != null" >
        last_login_time_utc = #{lastLoginTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTimeUtc != null" >
        create_time_utc = #{createTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTimeUtc != null" >
        update_time_utc = #{updateTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByIdBatch" parameterType="com.lt.dao.model.User" >
    update lt_user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTimeUtc != null" >
        last_login_time_utc = #{lastLoginTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTimeUtc != null" >
        create_time_utc = #{createTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTimeUtc != null" >
        update_time_utc = #{updateTimeUtc,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id in
    <foreach collection="userIds" open="(" close=")" item="id" separator=",">
    	#{id}
    </foreach>
  </update>
  
  <!-- login user data -->
  <select id="selectLoginUser" parameterType="string" resultType="map">
  	select 
		a.id,a.email,a.username,a.company_id,a.department_id,a.password,
		b.name as COMPANY_NAME,c.name as DEPARTMENT_NAME
	 from 
		lt_user  a 
	 inner join lt_company  b on a.company_id=b.id
	 left join lt_department c on a.department_id=c.id
	 where a.username = #{userAccount} or a.email=#{userAccount}
  </select>
  <select id="selectLoginUserAdmin" parameterType="string" resultType="map">
  	SELECT id,email,username,password FROM lt_admin where email=#{userAccount} or username=#{userAccount}
  </select>
  
  <!-- 查询所有用户 -->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="com.lt.dao.model.User">
    select u.*,c.name as companyName,d.name as departmentName from lt_user u 
    left join lt_company c on u.company_id=c.id
    left join lt_department d on u.department_id=d.id
    order by u.create_time_utc desc
  </select>
  
  <!-- 查询部门下的用户 -->
  <select id="selectUserByDepartmentId" resultMap="BaseResultMap" parameterType="com.lt.dao.model.User">
    select u.*,c.name as companyName,d.name as departmentName from lt_user u 
    left join lt_company c on u.company_id=c.id
    left join lt_department d on u.department_id=d.id
    where u.department_id ${op} #{departmentId}
  </select>
</mapper>